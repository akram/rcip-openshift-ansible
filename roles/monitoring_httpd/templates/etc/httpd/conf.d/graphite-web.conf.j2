NameVirtualHost *:{{ httpd_daemon_graphite_port }}

WSGISocketPrefix /var/run/wsgi

<VirtualHost *:{{ httpd_daemon_graphite_port }}>
    ServerName {{ httpd_graphs_fqdn }}
		DocumentRoot "/opt/graphite/webapp"
    ErrorLog /var/log/httpd/graphite-web-error.log
    CustomLog /var/log/httpd/graphite-web-access.log common


		# I've found that an equal number of processes & threads tends
		# to show the best performance for Graphite (ymmv).
		WSGIDaemonProcess graphite processes=5 threads=5 display-name='%{GROUP}' inactivity-timeout=120
		WSGIProcessGroup graphite
		WSGIApplicationGroup %{GLOBAL}
		WSGIImportScript /opt/graphite/conf/graphite.wsgi process-group=graphite application-group=%{GLOBAL}

		# XXX You will need to create this file! There is a graphite.wsgi.example
		# file in this directory that you can safely use, just copy it to graphite.wgsi
		WSGIScriptAlias / /opt/graphite/conf/graphite.wsgi


		# XXX To serve static files, either:
		# * Install the whitenoise Python package (pip install whitenoise)
		# * Collect static files in a directory by running:
		#     django-admin.py collectstatic --noinput --settings=graphite.settings
		#   And set an alias to serve static files with Apache:
		#Alias /static/ /opt/graphite/static/
		Alias /static/ /opt/graphite/webapp/content/

		########################
		# URL-prefixed install #
		########################
		# If using URL_PREFIX in local_settings for URL-prefixed install (that is not located at "/"))
		# your WSGIScriptAlias line should look like the following (e.g. URL_PREFX="/graphite"

		# WSGIScriptAlias /graphite /srv/graphite-web/conf/graphite.wsgi/graphite
		# Alias /graphite/static /opt/graphite/webapp/content
		#  <Location "/graphite/static/">
		#        SetHandler None
		# </Location>

		<Directory /opt/graphite/webapp>
        Options All
        AllowOverride All
        Require all granted
		</Directory>
		# XXX In order for the django admin site media to work you
		# must change @DJANGO_ROOT@ to be the path to your django
		# installation, which is probably something like:
		# /usr/lib/python2.6/site-packages/django
		Alias /media/ "/usr/lib64/python2.7/site-packages/django"

		# The graphite.wsgi file has to be accessible by apache. It won't
		# be visible to clients because of the DocumentRoot though.
		<Directory /opt/graphite/conf/>
						<IfVersion < 2.4>
										Order deny,allow
										Allow from all
						</IfVersion>
						<IfVersion >= 2.4>
										Require all granted
						</IfVersion>
		</Directory>
</VirtualHost>
