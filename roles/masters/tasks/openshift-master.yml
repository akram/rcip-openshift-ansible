---
- name: loglevel openshift-master api
  lineinfile:
    dest: "/etc/sysconfig/{{ masters_deamon_name }}"
    regexp: '^OPTIONS=(.*)--loglevel=[0-9](.*)$'
    line: 'OPTIONS=\1--loglevel={{ loglevel_openshift_master }}\2'
    backrefs: yes
  notify:
      - restart openshift-master-api

- name: loglevel openshift-master controllers
  lineinfile:
    dest: "/etc/sysconfig/{{ masters_deamon_name_controllers }}"
    regexp: '^OPTIONS=(.*)--loglevel=[0-9](.*)$'
    line: 'OPTIONS=\1--loglevel={{ loglevel_openshift_master }}\2'
    backrefs: yes
  notify:
      - restart openshift-master-api
  when: masters_openshift_master_cluster_method == 'native'

- name: http_proxy openshift-master
  lineinfile:
    dest: "/etc/sysconfig/{{ masters_deamon_name }}"
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
  with_items:
    - { regexp: '^HTTP_PROXY=.*', line: "HTTP_PROXY='{{ proxy_env[\'http_proxy\'] }}'" }
    - { regexp: '^HTTPS_PROXY=.*', line: "HTTPS_PROXY='{{ proxy_env[\'https_proxy\'] }}'" }
    - { regexp: '^NO_PROXY=.*', line: "NO_PROXY='{{ no_proxy }},{{ openshift_vip_fqdn_internal }}{% for host in groups['all'] %},{{ hostvars[host].get(\"inventory_hostname\") }}{% endfor %}{% for ns in hostvars[groups[\"masters\"][0]].ansible_local.rcip_openshift.values() %}{% for ip in ns.services.values() %},{{ip}}{% endfor %}{% endfor %}'" }

  notify:
      - restart openshift-master-api
  when: proxy_env['http_proxy']
  tags: proxyenv


- name: http_proxy openshift-master-controllers
  lineinfile:
    dest: "/etc/sysconfig/{{ masters_deamon_name_controllers }}"
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
  with_items:
    - { regexp: '^HTTP_PROXY=.*', line: "HTTP_PROXY='{{ proxy_env[\'http_proxy\'] }}'" }
    - { regexp: '^HTTPS_PROXY=.*', line: "HTTPS_PROXY='{{ proxy_env[\'https_proxy\'] }}'" }
    - { regexp: '^NO_PROXY=.*', line: "NO_PROXY='{{ no_proxy }},{{ openshift_vip_fqdn_internal }}{% for host in groups['all'] %},{{ hostvars[host].get(\"inventory_hostname\") }}{% endfor %}{% for ns in hostvars[groups[\"masters\"][0]].ansible_local.rcip_openshift.values() %}{% for ip in ns.services.values() %},{{ip}}{% endfor %}{% endfor %}'" }
  notify:
    - restart openshift-master-controllers
  when: masters_openshift_master_cluster_method == 'native' and proxy_env['http_proxy']
  tags: proxyenv
  ignore_errors: yes

- name: ensure service openshift-master api started
  service:
       name: "{{ masters_deamon_name }}"
       state: started
       enabled: yes

# TODO: fix the ugly workaround of setting ignore_errors
#       the controllers service tries to start even if it is already started
- name: ensure service openshift-master-controllers started
  service:
       name: "{{ masters_deamon_name_controllers }}"
       state: started
       enabled: yes
  when: masters_openshift_master_cluster_method == 'native'
  ignore_errors: yes
