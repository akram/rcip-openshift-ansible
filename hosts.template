#can use your /etc/ansible/hosts

[OSEv3:children]
masters
nodes
etcd
nfs
dns
monitoring

[masters]
master.openshift.com

[nodes]
master.openshift.com
node1.openshift.com
node1.openshift.com

[monitoring]
monitoring.openshift.com

[dns]
#setup dnsmasq
monitoring.openshift.com

[nfs]
#setup nfs server
master1.openshift.com

[all:vars]
#Vip ip used into dnsmasq to match to the openshift api fqdn (only needed if you use dns role)
customer_api_public_vip="1.2.3.4"

monitoring_vip="1.2.3.4"
rabbitmq_sensu_password="password"
customer="openshift_test"
customer_domain="enoshift.com"
# if you want to be able to reach sensu with other domain names than the default mon.{{ customer_domain }} :
customer_sensu_httpd_aliases=['monitor.enoshift.com', 'sensu.myclient-cloud.com']

sensu_flowdock_auth_token="mytoken"
sensu_mail_to="mail1@domain.com, mail2@domain"
#wildcard to generate router certificat
openshift_wildcard_dns="*.{{ customer_domain }}"

#
#Optional
#

customer_docker_storage_dev=xvdf
customer_collectd_disk_rootfs=xvda2

# In case you want to use local storage for registry
# customer_openshift_registry_mount_host='/mnt/ose-registry'
# customer_collectd_disk_ose_registry=xvdg

customer_http_proxy=http://openshiftproxy.com:8080
customer_https_proxy=http://openshiftproxy.com:8080
customer_append_no_proxy=",.intranet.customer"
# or if you want to overwrite default no_proxy instead:
# customer_no_proxy="localhost,.svc.cluster.local,.intranet.customer"
# manage docker storage true/false
manage_docker_storage=true

# for monitoring check using api rest
#openshift_base_api='/api/v1/'

# Subscriptions. If you want to automatically register all your nodes.
# subscription_name='username'
# subscription_pass='password'
# subscription_pool='^Openshift Standard.*$'

# customer_sensu_httpd_port='443'
# customer_sensu_httpd_ssl='true'
# customer_grafana_httpd_port='443'
# customer_grafana_httpd_ssl='true'
# customer_kibana_httpd_port='443'
# customer_kibana_httpd_ssl='true'
# if you don't want to use the default volume group docker-vg for docker:
# customer_docker_vg=rhel

# you can also override defaults:
# graphite_mysql_user='graphite'
# graphite_mysql_password='graphite'
# graphite_mysql_db='graphite'
# if you have an external mysql already setup, and you want to use it,
# you can change mysql_host:
# mysql_host='127.0.0.1'
# mysql_port='3306'
# if it's different of '127.0.0.1' or 'localhost',
# playbook will then not install mysql and create user/db on monitoring host.

ntp_servers=["ntp1.customer", "ntp2.customer"]
dns_servers=["10.0.0.1", "10.0.0.2"]
postfix_relayhost="smtp.mycustomer.intranet"
postfix_myorigin="smtp.mycustomer.com"
timezone="Europe/Paris"
